%table.table.table-account.table-hover
  - credits = AccountYear.new(account: account, year: year, credits: true)
  %tbody
    %tr.header
      %td{colspan: 14}
        %h3 Income

    %tr.years
      %th
      - credits.months.each do |month|
        %th= month.strftime('%b')
      %th #{year} Total

    - item_category_collection(credits).each do |category_group, categories|
      - next unless categories.present?
      - next if categories.none? { |(name, category_id)| credits.collection[category_id].present? }

      %tr.category-header
        %th{colspan: 14}
          %em= category_group

      - categories.each do |(name, category_id)|
        - next unless (row = credits.collection[category_id])
        %tr
          %td.category= row[0]
          - (1..12).each do |x|
            %td.items= frow(row[x])
          %td.total= frow(row[13].sum(&:amount))

      %tr.category-footer
        %td{colspan: 13}
        %td.total= frow(categories.flat_map { |(name, category_id)| credits.collection[category_id]&.last }.compact.sum(&:amount))

    %tr.category-header
      %td{colspan: 14}

    %tr.footer
      - row = credits.totals
      %td.category #{year} Total
      - (1..12).each do |x|
        %td.items= frow(row[x].sum(&:amount))
      %td.total= price_to_currency(row[13].sum(&:amount))


  - debits = AccountYear.new(account: account, year: year, debits: true)
  %tbody
    %tr.header
      %td{colspan: 14}
        %h3 Expenses

    %tr.years
      %th
      - credits.months.each do |month|
        %th= month.strftime('%b')
      %th #{year} Total

    - item_category_collection(debits).each_with_index do |(category_group, categories), index|
      - next unless categories.present?
      - next if categories.none? { |(name, category_id)| debits.collection[category_id].present? }

      %tr.category-header
        %th{colspan: 14}
          %em= category_group

      - categories.each do |(name, category_id)|
        - next unless (row = debits.collection[category_id])
        %tr
          %td.category= row[0]
          - (1..12).each do |x|
            %td.items= frow(row[x])
          %td.total= frow(row[13].sum(&:amount))

      %tr.category-footer
        %td{colspan: 13}
        %td.total= frow(categories.flat_map { |(name, category_id)| debits.collection[category_id]&.last }.compact.sum(&:amount))

    %tr.category-header
      %td{colspan: 14}

    %tr.footer
      - row = debits.totals
      %td.category #{year} Total
      - (1..12).each do |x|
        %td.items= frow(row[x].sum(&:amount))
      %td.total= price_to_currency(row[13].sum(&:amount))

  - summary = AccountYear.new(account: account, year: year)
  - cashflow1 = {}
  - cashflow2 = {}
  %tbody
    %tr.header
      %td{colspan: 14}
        %h3 Summary

    %tr.years
      %th
      - credits.months.each do |month|
        %th= month.strftime('%b')
      %th #{year} Total

    %tr.category-header
      %th{colspan: 14}
        %em Account Balance

    %tr
      %td.category Balance on last day of month
      - (1..12).each do |x|
        %td.items= fbal(summary.balances[x]&.balance, summary.balances[x])
      %td.total= fbal(summary.balances[12]&.balance, summary.balances[12])

    %tr.category-footer
      %td{colspan: 14}

    %tr.category-header
      %th{colspan: 14}
        %em Cash Flow

    %tr
      %td.category Credits minus Debits
      - (1..12).each do |x|
        %td.items
          - cashflow1[x] = credits.totals[x].sum(&:amount) - debits.totals[x].sum(&:amount)
          = fbal(cashflow1[x])
      %td.total
        - cashflow1[13] = credits.totals[13].sum(&:amount) - debits.totals[13].sum(&:amount)
        = fbal(cashflow1[13])

    %tr
      %td.category Difference in Balance
      %td.items
        - if summary.balances[1].present? && summary.last_year_item.present?
          - cashflow2[1] = summary.balances[1].balance - summary.last_year_item.balance
          = fbal(cashflow2[1], summary.last_year_item, summary.balances[1])
        - else
          = fbal(nil)

      - (2..12).each do |x|
        %td.items
          - if summary.balances[x].present? && summary.balances[x-1].present?
            - cashflow2[x] = summary.balances[x].balance - summary.balances[x-1].balance
            = fbal(cashflow2[x], summary.balances[x-1], summary.balances[x])
          - else
            = fbal(nil)
      %td.total
        - if summary.balances[12].present? && summary.last_year_item.present?
          - cashflow2[13] = summary.balances[12].balance - summary.last_year_item.balance
          = fbal(cashflow2[13], summary.last_year_item, summary.balances[12])
        - else
          = fbal(nil)

    %tr.category-footer
      %td{colspan: 14}

    %tr.category-header
      %td{colspan: 14}

    %tr.footer
      %td.category Double Check
      - (1..12).each do |x|
        %td.items
          = double_check(cashflow1[x], cashflow2[x])
      %td.total
        - if cashflow1[13].present? && cashflow2[13].present?
          = double_check(cashflow1[13], cashflow2[13], fudge: 50)
        - else
          = fbal(nil)

